Написать консольную программу на языке Python 3.10.
Есть две директории.
1. В первой лежат файлы "модели" в формате ".safetensors" и ".ckpt". Например model1.safetensors, model2.safetensors, model3.ckpt и так далее. В директории могут быть также другие файлы, которые следует игнорировать. В директории могут быть вложенные директории так-же содержащие файлы моделей. Вложенность не ограниченна.
2. Во второй лежат файлы "изображения" в формате ".png". Например image1.png, image2.png и так далее. В директории могут быть также другие файлы, которые следует игнорировать. В директории могут быть вложенные директории так-же содержащие файлы изображений. Вложенность не ограниченна.

Программа должна составить отчеты о том, сколько и каких именно изображений было сгенерировано при помощи тех или иных моделей. Информация о том, какой моделью сгенерировано изображение хранится в его EXIF параметре.

Программа последовательно считывает все найденые файлы модели из директории 1 (и вложенных директорий) и для каждого файла сразу генерирует хэш. Хеш функция "calculate_sha256" должна быть такой, как я опишу далее. При этом составляется словарь пар - имя файла модели : хэш. Если возникает исключение или ошибка, то файл пропускается и берётся следующий файл.

Затем программа последовательно считывает все найденые файлы изображений из директории 2 (и вложенных директорий) и в каждом файле ищет EXIF параметр "Model hash: " при помощи функции "get_model_hash_from_image_file" которую я опишу далее. Функция возращает для каждого файла изображения хэш модели, при помощи которой он был сгенерирован. При этом составляется словарь пар - имя файла изображения : хэш модели. Если возникает исключение или ошибка (например параметр не найден), то файл пропускается и берётся следующий файл.

Это нужно для того чтобы сопоставить модели из одной директории с изображениями в другой директории.

Далее программа должна сопоставить полученные словари напечатать отчёт следующего характера:
Имя модели 1, её хэш, количество изображений имеющих такой-же хэш модели.
Имя модели 2, её хэш, количество изображений имеющих такой-же хэш модели.
...
И так далее.

Затем должен идти более подробный отчет:
Имя модели 1, её хэш, количество изображений имеющих такой-же хэш модели.
	Список изображений имеющих такой - же хэш.
	...
Имя модели 2, её хэш, количество изображений имеющих такой-же хэш модели.
	Список изображений имеющих такой - же хэш.
	...
...
И так далее.

Так-же нужно отсортировать отчёт чтобы сначала шли имена моделей с большим количествои связанных с ними файлов, затем с меньшим, на убывание.
Так-же нужно отображать в отчёте имена файлов у которых хэш не совпадает ни с одной моделью.
Имена моделей и имена изображений следует использовать с относительным путём, чтобы было понятно в какой директории лежит файл.

Хеш функция считается следующем образом: 
import hashlib
# file format ".safetensors" and ".ckpt"
def calculate_sha256(filename):
    hash_sha256 = hashlib.sha256()
    with open(filename, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_sha256.update(chunk)
    return hash_sha256.hexdigest()[:10]

Функция возращающая для каждого файла изображения хэш модели которая его сгенерировала:
from PIL import Image
#file format .png
def get_model_hash_from_image_file(filename):
    im = Image.open(filename)
    im.load()
    png_EXIF_data = im.info['parameters']
    index_in_string = png_EXIF_data.find('Model hash: ')
    return png_EXIF_data[index_in_string + 12: index_in_string + 12 + 10]
